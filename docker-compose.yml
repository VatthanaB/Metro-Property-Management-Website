version: "3"
services:
  client:
    build:
      context: ./client
    ports:
      - "3000:3000"
    depends_on:
      - server

  server:
    build:
      context: ./server
    ports:
      - "5000:5000"
    environment:
      - MONGODB_URI=mongodb://mongo:27017/Mission-Ready-M5
      - MONGODB_SEEDING="mongodb://localhost:27017"
    depends_on:
      - mongo

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    expose:
      - "27017"
    ports:
      - "27017:27017"

    volumes:
      - mongo-data:/data/db # Add this line to define a volume for MongoDB data
  seed-data:
    build:
      context: ./mongo
      dockerfile: Dockerfile
    depends_on:
      - mongo
    command: sh -c 'mongoimport --host mongo --db Mission-Ready-M5 --collection properties --type json --file /docker-entrypoint-initdb.d/property.json --jsonArray || true'
volumes:
  mongo-data: # Define the volume for MongoDB data

# docker-compose build        for major changes on Dockerfile / docker-compose.yml
#docker-compose up --build     for minor day to day changes

# If you see double datas in the db run those two commands to reset the volumes
# docker-compose down -v       to remove all volumes
# docker-compose up

